<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Danping&#39;s blog</title>
    <link>https://maodanp.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Danping&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2018. All rights reserved.</copyright>
    <lastBuildDate>Sat, 11 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maodanp.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>观察者模式中Subject在C&#43;&#43;中的模板化</title>
      <link>https://maodanp.github.io/2021/01/18/cpp_observer_subject/</link>
      <pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maodanp.github.io/2021/01/18/cpp_observer_subject/</guid>
      <description>&lt;p&gt;本篇将介绍观察者模式中 Subject 类在 C++ 中的模板化的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 右值引用和移动语义</title>
      <link>https://maodanp.github.io/2020/06/11/cpp_move/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maodanp.github.io/2020/06/11/cpp_move/</guid>
      <description>&lt;p&gt;C++11 引入的右值引用和移动语义，可以避免无谓的复制，提高了程序性能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; lambda 函数</title>
      <link>https://maodanp.github.io/2020/06/02/cpp_lambda/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maodanp.github.io/2020/06/02/cpp_lambda/</guid>
      <description>&lt;p&gt;本篇主要描述 lambda 函数以及跟仿函数的关联，最后介绍 lambda 的使用陷阱。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 内存分配与 RAII</title>
      <link>https://maodanp.github.io/2020/05/31/cpp_raii/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maodanp.github.io/2020/05/31/cpp_raii/</guid>
      <description>&lt;p&gt;本篇主要描述 &lt;code&gt;C++&lt;/code&gt; 的内存分配方式，以及 &lt;code&gt;RAII&lt;/code&gt; 、智能指针。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
